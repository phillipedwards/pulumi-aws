// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package comprehend

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EntityRecognizerInputDataConfig struct {
	// Specifies location of the document annotation data.
	// See the `annotations` Configuration Block section below.
	// One of `annotations` or `entityList` is required.
	Annotations *EntityRecognizerInputDataConfigAnnotations `pulumi:"annotations"`
	// List of training datasets produced by Amazon SageMaker Ground Truth.
	// Used if `dataFormat` is `AUGMENTED_MANIFEST`.
	// See the `augmentedManifests` Configuration Block section below.
	AugmentedManifests []EntityRecognizerInputDataConfigAugmentedManifest `pulumi:"augmentedManifests"`
	// The format for the training data.
	// One of `COMPREHEND_CSV` or `AUGMENTED_MANIFEST`.
	DataFormat *string `pulumi:"dataFormat"`
	// Specifies a collection of training documents.
	// Used if `dataFormat` is `COMPREHEND_CSV`.
	// See the `documents` Configuration Block section below.
	Documents *EntityRecognizerInputDataConfigDocuments `pulumi:"documents"`
	// Specifies location of the entity list data.
	// See the `entityList` Configuration Block section below.
	// One of `entityList` or `annotations` is required.
	EntityList *EntityRecognizerInputDataConfigEntityList `pulumi:"entityList"`
	// Set of entity types to be recognized.
	// Has a maximum of 25 items.
	// See the `entityTypes` Configuration Block section below.
	EntityTypes []EntityRecognizerInputDataConfigEntityType `pulumi:"entityTypes"`
}

// EntityRecognizerInputDataConfigInput is an input type that accepts EntityRecognizerInputDataConfigArgs and EntityRecognizerInputDataConfigOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigInput` via:
//
//          EntityRecognizerInputDataConfigArgs{...}
type EntityRecognizerInputDataConfigInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigOutput() EntityRecognizerInputDataConfigOutput
	ToEntityRecognizerInputDataConfigOutputWithContext(context.Context) EntityRecognizerInputDataConfigOutput
}

type EntityRecognizerInputDataConfigArgs struct {
	// Specifies location of the document annotation data.
	// See the `annotations` Configuration Block section below.
	// One of `annotations` or `entityList` is required.
	Annotations EntityRecognizerInputDataConfigAnnotationsPtrInput `pulumi:"annotations"`
	// List of training datasets produced by Amazon SageMaker Ground Truth.
	// Used if `dataFormat` is `AUGMENTED_MANIFEST`.
	// See the `augmentedManifests` Configuration Block section below.
	AugmentedManifests EntityRecognizerInputDataConfigAugmentedManifestArrayInput `pulumi:"augmentedManifests"`
	// The format for the training data.
	// One of `COMPREHEND_CSV` or `AUGMENTED_MANIFEST`.
	DataFormat pulumi.StringPtrInput `pulumi:"dataFormat"`
	// Specifies a collection of training documents.
	// Used if `dataFormat` is `COMPREHEND_CSV`.
	// See the `documents` Configuration Block section below.
	Documents EntityRecognizerInputDataConfigDocumentsPtrInput `pulumi:"documents"`
	// Specifies location of the entity list data.
	// See the `entityList` Configuration Block section below.
	// One of `entityList` or `annotations` is required.
	EntityList EntityRecognizerInputDataConfigEntityListPtrInput `pulumi:"entityList"`
	// Set of entity types to be recognized.
	// Has a maximum of 25 items.
	// See the `entityTypes` Configuration Block section below.
	EntityTypes EntityRecognizerInputDataConfigEntityTypeArrayInput `pulumi:"entityTypes"`
}

func (EntityRecognizerInputDataConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfig)(nil)).Elem()
}

func (i EntityRecognizerInputDataConfigArgs) ToEntityRecognizerInputDataConfigOutput() EntityRecognizerInputDataConfigOutput {
	return i.ToEntityRecognizerInputDataConfigOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigArgs) ToEntityRecognizerInputDataConfigOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigOutput)
}

func (i EntityRecognizerInputDataConfigArgs) ToEntityRecognizerInputDataConfigPtrOutput() EntityRecognizerInputDataConfigPtrOutput {
	return i.ToEntityRecognizerInputDataConfigPtrOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigArgs) ToEntityRecognizerInputDataConfigPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigOutput).ToEntityRecognizerInputDataConfigPtrOutputWithContext(ctx)
}

// EntityRecognizerInputDataConfigPtrInput is an input type that accepts EntityRecognizerInputDataConfigArgs, EntityRecognizerInputDataConfigPtr and EntityRecognizerInputDataConfigPtrOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigPtrInput` via:
//
//          EntityRecognizerInputDataConfigArgs{...}
//
//  or:
//
//          nil
type EntityRecognizerInputDataConfigPtrInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigPtrOutput() EntityRecognizerInputDataConfigPtrOutput
	ToEntityRecognizerInputDataConfigPtrOutputWithContext(context.Context) EntityRecognizerInputDataConfigPtrOutput
}

type entityRecognizerInputDataConfigPtrType EntityRecognizerInputDataConfigArgs

func EntityRecognizerInputDataConfigPtr(v *EntityRecognizerInputDataConfigArgs) EntityRecognizerInputDataConfigPtrInput {
	return (*entityRecognizerInputDataConfigPtrType)(v)
}

func (*entityRecognizerInputDataConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerInputDataConfig)(nil)).Elem()
}

func (i *entityRecognizerInputDataConfigPtrType) ToEntityRecognizerInputDataConfigPtrOutput() EntityRecognizerInputDataConfigPtrOutput {
	return i.ToEntityRecognizerInputDataConfigPtrOutputWithContext(context.Background())
}

func (i *entityRecognizerInputDataConfigPtrType) ToEntityRecognizerInputDataConfigPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigPtrOutput)
}

type EntityRecognizerInputDataConfigOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfig)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigOutput) ToEntityRecognizerInputDataConfigOutput() EntityRecognizerInputDataConfigOutput {
	return o
}

func (o EntityRecognizerInputDataConfigOutput) ToEntityRecognizerInputDataConfigOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigOutput {
	return o
}

func (o EntityRecognizerInputDataConfigOutput) ToEntityRecognizerInputDataConfigPtrOutput() EntityRecognizerInputDataConfigPtrOutput {
	return o.ToEntityRecognizerInputDataConfigPtrOutputWithContext(context.Background())
}

func (o EntityRecognizerInputDataConfigOutput) ToEntityRecognizerInputDataConfigPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityRecognizerInputDataConfig) *EntityRecognizerInputDataConfig {
		return &v
	}).(EntityRecognizerInputDataConfigPtrOutput)
}

// Specifies location of the document annotation data.
// See the `annotations` Configuration Block section below.
// One of `annotations` or `entityList` is required.
func (o EntityRecognizerInputDataConfigOutput) Annotations() EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfig) *EntityRecognizerInputDataConfigAnnotations {
		return v.Annotations
	}).(EntityRecognizerInputDataConfigAnnotationsPtrOutput)
}

// List of training datasets produced by Amazon SageMaker Ground Truth.
// Used if `dataFormat` is `AUGMENTED_MANIFEST`.
// See the `augmentedManifests` Configuration Block section below.
func (o EntityRecognizerInputDataConfigOutput) AugmentedManifests() EntityRecognizerInputDataConfigAugmentedManifestArrayOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfig) []EntityRecognizerInputDataConfigAugmentedManifest {
		return v.AugmentedManifests
	}).(EntityRecognizerInputDataConfigAugmentedManifestArrayOutput)
}

// The format for the training data.
// One of `COMPREHEND_CSV` or `AUGMENTED_MANIFEST`.
func (o EntityRecognizerInputDataConfigOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfig) *string { return v.DataFormat }).(pulumi.StringPtrOutput)
}

// Specifies a collection of training documents.
// Used if `dataFormat` is `COMPREHEND_CSV`.
// See the `documents` Configuration Block section below.
func (o EntityRecognizerInputDataConfigOutput) Documents() EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfig) *EntityRecognizerInputDataConfigDocuments { return v.Documents }).(EntityRecognizerInputDataConfigDocumentsPtrOutput)
}

// Specifies location of the entity list data.
// See the `entityList` Configuration Block section below.
// One of `entityList` or `annotations` is required.
func (o EntityRecognizerInputDataConfigOutput) EntityList() EntityRecognizerInputDataConfigEntityListPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfig) *EntityRecognizerInputDataConfigEntityList {
		return v.EntityList
	}).(EntityRecognizerInputDataConfigEntityListPtrOutput)
}

// Set of entity types to be recognized.
// Has a maximum of 25 items.
// See the `entityTypes` Configuration Block section below.
func (o EntityRecognizerInputDataConfigOutput) EntityTypes() EntityRecognizerInputDataConfigEntityTypeArrayOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfig) []EntityRecognizerInputDataConfigEntityType {
		return v.EntityTypes
	}).(EntityRecognizerInputDataConfigEntityTypeArrayOutput)
}

type EntityRecognizerInputDataConfigPtrOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerInputDataConfig)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigPtrOutput) ToEntityRecognizerInputDataConfigPtrOutput() EntityRecognizerInputDataConfigPtrOutput {
	return o
}

func (o EntityRecognizerInputDataConfigPtrOutput) ToEntityRecognizerInputDataConfigPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigPtrOutput {
	return o
}

func (o EntityRecognizerInputDataConfigPtrOutput) Elem() EntityRecognizerInputDataConfigOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfig) EntityRecognizerInputDataConfig {
		if v != nil {
			return *v
		}
		var ret EntityRecognizerInputDataConfig
		return ret
	}).(EntityRecognizerInputDataConfigOutput)
}

// Specifies location of the document annotation data.
// See the `annotations` Configuration Block section below.
// One of `annotations` or `entityList` is required.
func (o EntityRecognizerInputDataConfigPtrOutput) Annotations() EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfig) *EntityRecognizerInputDataConfigAnnotations {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(EntityRecognizerInputDataConfigAnnotationsPtrOutput)
}

// List of training datasets produced by Amazon SageMaker Ground Truth.
// Used if `dataFormat` is `AUGMENTED_MANIFEST`.
// See the `augmentedManifests` Configuration Block section below.
func (o EntityRecognizerInputDataConfigPtrOutput) AugmentedManifests() EntityRecognizerInputDataConfigAugmentedManifestArrayOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfig) []EntityRecognizerInputDataConfigAugmentedManifest {
		if v == nil {
			return nil
		}
		return v.AugmentedManifests
	}).(EntityRecognizerInputDataConfigAugmentedManifestArrayOutput)
}

// The format for the training data.
// One of `COMPREHEND_CSV` or `AUGMENTED_MANIFEST`.
func (o EntityRecognizerInputDataConfigPtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfig) *string {
		if v == nil {
			return nil
		}
		return v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies a collection of training documents.
// Used if `dataFormat` is `COMPREHEND_CSV`.
// See the `documents` Configuration Block section below.
func (o EntityRecognizerInputDataConfigPtrOutput) Documents() EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfig) *EntityRecognizerInputDataConfigDocuments {
		if v == nil {
			return nil
		}
		return v.Documents
	}).(EntityRecognizerInputDataConfigDocumentsPtrOutput)
}

// Specifies location of the entity list data.
// See the `entityList` Configuration Block section below.
// One of `entityList` or `annotations` is required.
func (o EntityRecognizerInputDataConfigPtrOutput) EntityList() EntityRecognizerInputDataConfigEntityListPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfig) *EntityRecognizerInputDataConfigEntityList {
		if v == nil {
			return nil
		}
		return v.EntityList
	}).(EntityRecognizerInputDataConfigEntityListPtrOutput)
}

// Set of entity types to be recognized.
// Has a maximum of 25 items.
// See the `entityTypes` Configuration Block section below.
func (o EntityRecognizerInputDataConfigPtrOutput) EntityTypes() EntityRecognizerInputDataConfigEntityTypeArrayOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfig) []EntityRecognizerInputDataConfigEntityType {
		if v == nil {
			return nil
		}
		return v.EntityTypes
	}).(EntityRecognizerInputDataConfigEntityTypeArrayOutput)
}

type EntityRecognizerInputDataConfigAnnotations struct {
	// Location of entity list.
	S3Uri     string  `pulumi:"s3Uri"`
	TestS3Uri *string `pulumi:"testS3Uri"`
}

// EntityRecognizerInputDataConfigAnnotationsInput is an input type that accepts EntityRecognizerInputDataConfigAnnotationsArgs and EntityRecognizerInputDataConfigAnnotationsOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigAnnotationsInput` via:
//
//          EntityRecognizerInputDataConfigAnnotationsArgs{...}
type EntityRecognizerInputDataConfigAnnotationsInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigAnnotationsOutput() EntityRecognizerInputDataConfigAnnotationsOutput
	ToEntityRecognizerInputDataConfigAnnotationsOutputWithContext(context.Context) EntityRecognizerInputDataConfigAnnotationsOutput
}

type EntityRecognizerInputDataConfigAnnotationsArgs struct {
	// Location of entity list.
	S3Uri     pulumi.StringInput    `pulumi:"s3Uri"`
	TestS3Uri pulumi.StringPtrInput `pulumi:"testS3Uri"`
}

func (EntityRecognizerInputDataConfigAnnotationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigAnnotations)(nil)).Elem()
}

func (i EntityRecognizerInputDataConfigAnnotationsArgs) ToEntityRecognizerInputDataConfigAnnotationsOutput() EntityRecognizerInputDataConfigAnnotationsOutput {
	return i.ToEntityRecognizerInputDataConfigAnnotationsOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigAnnotationsArgs) ToEntityRecognizerInputDataConfigAnnotationsOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAnnotationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigAnnotationsOutput)
}

func (i EntityRecognizerInputDataConfigAnnotationsArgs) ToEntityRecognizerInputDataConfigAnnotationsPtrOutput() EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return i.ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigAnnotationsArgs) ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigAnnotationsOutput).ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(ctx)
}

// EntityRecognizerInputDataConfigAnnotationsPtrInput is an input type that accepts EntityRecognizerInputDataConfigAnnotationsArgs, EntityRecognizerInputDataConfigAnnotationsPtr and EntityRecognizerInputDataConfigAnnotationsPtrOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigAnnotationsPtrInput` via:
//
//          EntityRecognizerInputDataConfigAnnotationsArgs{...}
//
//  or:
//
//          nil
type EntityRecognizerInputDataConfigAnnotationsPtrInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigAnnotationsPtrOutput() EntityRecognizerInputDataConfigAnnotationsPtrOutput
	ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(context.Context) EntityRecognizerInputDataConfigAnnotationsPtrOutput
}

type entityRecognizerInputDataConfigAnnotationsPtrType EntityRecognizerInputDataConfigAnnotationsArgs

func EntityRecognizerInputDataConfigAnnotationsPtr(v *EntityRecognizerInputDataConfigAnnotationsArgs) EntityRecognizerInputDataConfigAnnotationsPtrInput {
	return (*entityRecognizerInputDataConfigAnnotationsPtrType)(v)
}

func (*entityRecognizerInputDataConfigAnnotationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerInputDataConfigAnnotations)(nil)).Elem()
}

func (i *entityRecognizerInputDataConfigAnnotationsPtrType) ToEntityRecognizerInputDataConfigAnnotationsPtrOutput() EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return i.ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(context.Background())
}

func (i *entityRecognizerInputDataConfigAnnotationsPtrType) ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigAnnotationsPtrOutput)
}

type EntityRecognizerInputDataConfigAnnotationsOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigAnnotationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigAnnotations)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigAnnotationsOutput) ToEntityRecognizerInputDataConfigAnnotationsOutput() EntityRecognizerInputDataConfigAnnotationsOutput {
	return o
}

func (o EntityRecognizerInputDataConfigAnnotationsOutput) ToEntityRecognizerInputDataConfigAnnotationsOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAnnotationsOutput {
	return o
}

func (o EntityRecognizerInputDataConfigAnnotationsOutput) ToEntityRecognizerInputDataConfigAnnotationsPtrOutput() EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return o.ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(context.Background())
}

func (o EntityRecognizerInputDataConfigAnnotationsOutput) ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityRecognizerInputDataConfigAnnotations) *EntityRecognizerInputDataConfigAnnotations {
		return &v
	}).(EntityRecognizerInputDataConfigAnnotationsPtrOutput)
}

// Location of entity list.
func (o EntityRecognizerInputDataConfigAnnotationsOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigAnnotations) string { return v.S3Uri }).(pulumi.StringOutput)
}

func (o EntityRecognizerInputDataConfigAnnotationsOutput) TestS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigAnnotations) *string { return v.TestS3Uri }).(pulumi.StringPtrOutput)
}

type EntityRecognizerInputDataConfigAnnotationsPtrOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigAnnotationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerInputDataConfigAnnotations)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigAnnotationsPtrOutput) ToEntityRecognizerInputDataConfigAnnotationsPtrOutput() EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return o
}

func (o EntityRecognizerInputDataConfigAnnotationsPtrOutput) ToEntityRecognizerInputDataConfigAnnotationsPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAnnotationsPtrOutput {
	return o
}

func (o EntityRecognizerInputDataConfigAnnotationsPtrOutput) Elem() EntityRecognizerInputDataConfigAnnotationsOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigAnnotations) EntityRecognizerInputDataConfigAnnotations {
		if v != nil {
			return *v
		}
		var ret EntityRecognizerInputDataConfigAnnotations
		return ret
	}).(EntityRecognizerInputDataConfigAnnotationsOutput)
}

// Location of entity list.
func (o EntityRecognizerInputDataConfigAnnotationsPtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigAnnotations) *string {
		if v == nil {
			return nil
		}
		return &v.S3Uri
	}).(pulumi.StringPtrOutput)
}

func (o EntityRecognizerInputDataConfigAnnotationsPtrOutput) TestS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigAnnotations) *string {
		if v == nil {
			return nil
		}
		return v.TestS3Uri
	}).(pulumi.StringPtrOutput)
}

type EntityRecognizerInputDataConfigAugmentedManifest struct {
	// Location of annotation files.
	AnnotationDataS3Uri *string `pulumi:"annotationDataS3Uri"`
	// The JSON attribute that contains the annotations for the training documents.
	AttributeNames []string `pulumi:"attributeNames"`
	// Type of augmented manifest.
	// One of `PLAIN_TEXT_DOCUMENT` or `SEMI_STRUCTURED_DOCUMENT`.
	DocumentType *string `pulumi:"documentType"`
	// Location of entity list.
	S3Uri string `pulumi:"s3Uri"`
	// Location of source PDF files.
	SourceDocumentsS3Uri *string `pulumi:"sourceDocumentsS3Uri"`
	// Purpose of data in augmented manifest.
	// One of `TRAIN` or `TEST`.
	Split *string `pulumi:"split"`
}

// EntityRecognizerInputDataConfigAugmentedManifestInput is an input type that accepts EntityRecognizerInputDataConfigAugmentedManifestArgs and EntityRecognizerInputDataConfigAugmentedManifestOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigAugmentedManifestInput` via:
//
//          EntityRecognizerInputDataConfigAugmentedManifestArgs{...}
type EntityRecognizerInputDataConfigAugmentedManifestInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigAugmentedManifestOutput() EntityRecognizerInputDataConfigAugmentedManifestOutput
	ToEntityRecognizerInputDataConfigAugmentedManifestOutputWithContext(context.Context) EntityRecognizerInputDataConfigAugmentedManifestOutput
}

type EntityRecognizerInputDataConfigAugmentedManifestArgs struct {
	// Location of annotation files.
	AnnotationDataS3Uri pulumi.StringPtrInput `pulumi:"annotationDataS3Uri"`
	// The JSON attribute that contains the annotations for the training documents.
	AttributeNames pulumi.StringArrayInput `pulumi:"attributeNames"`
	// Type of augmented manifest.
	// One of `PLAIN_TEXT_DOCUMENT` or `SEMI_STRUCTURED_DOCUMENT`.
	DocumentType pulumi.StringPtrInput `pulumi:"documentType"`
	// Location of entity list.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
	// Location of source PDF files.
	SourceDocumentsS3Uri pulumi.StringPtrInput `pulumi:"sourceDocumentsS3Uri"`
	// Purpose of data in augmented manifest.
	// One of `TRAIN` or `TEST`.
	Split pulumi.StringPtrInput `pulumi:"split"`
}

func (EntityRecognizerInputDataConfigAugmentedManifestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigAugmentedManifest)(nil)).Elem()
}

func (i EntityRecognizerInputDataConfigAugmentedManifestArgs) ToEntityRecognizerInputDataConfigAugmentedManifestOutput() EntityRecognizerInputDataConfigAugmentedManifestOutput {
	return i.ToEntityRecognizerInputDataConfigAugmentedManifestOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigAugmentedManifestArgs) ToEntityRecognizerInputDataConfigAugmentedManifestOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAugmentedManifestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigAugmentedManifestOutput)
}

// EntityRecognizerInputDataConfigAugmentedManifestArrayInput is an input type that accepts EntityRecognizerInputDataConfigAugmentedManifestArray and EntityRecognizerInputDataConfigAugmentedManifestArrayOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigAugmentedManifestArrayInput` via:
//
//          EntityRecognizerInputDataConfigAugmentedManifestArray{ EntityRecognizerInputDataConfigAugmentedManifestArgs{...} }
type EntityRecognizerInputDataConfigAugmentedManifestArrayInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigAugmentedManifestArrayOutput() EntityRecognizerInputDataConfigAugmentedManifestArrayOutput
	ToEntityRecognizerInputDataConfigAugmentedManifestArrayOutputWithContext(context.Context) EntityRecognizerInputDataConfigAugmentedManifestArrayOutput
}

type EntityRecognizerInputDataConfigAugmentedManifestArray []EntityRecognizerInputDataConfigAugmentedManifestInput

func (EntityRecognizerInputDataConfigAugmentedManifestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityRecognizerInputDataConfigAugmentedManifest)(nil)).Elem()
}

func (i EntityRecognizerInputDataConfigAugmentedManifestArray) ToEntityRecognizerInputDataConfigAugmentedManifestArrayOutput() EntityRecognizerInputDataConfigAugmentedManifestArrayOutput {
	return i.ToEntityRecognizerInputDataConfigAugmentedManifestArrayOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigAugmentedManifestArray) ToEntityRecognizerInputDataConfigAugmentedManifestArrayOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAugmentedManifestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigAugmentedManifestArrayOutput)
}

type EntityRecognizerInputDataConfigAugmentedManifestOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigAugmentedManifestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigAugmentedManifest)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigAugmentedManifestOutput) ToEntityRecognizerInputDataConfigAugmentedManifestOutput() EntityRecognizerInputDataConfigAugmentedManifestOutput {
	return o
}

func (o EntityRecognizerInputDataConfigAugmentedManifestOutput) ToEntityRecognizerInputDataConfigAugmentedManifestOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAugmentedManifestOutput {
	return o
}

// Location of annotation files.
func (o EntityRecognizerInputDataConfigAugmentedManifestOutput) AnnotationDataS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigAugmentedManifest) *string { return v.AnnotationDataS3Uri }).(pulumi.StringPtrOutput)
}

// The JSON attribute that contains the annotations for the training documents.
func (o EntityRecognizerInputDataConfigAugmentedManifestOutput) AttributeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigAugmentedManifest) []string { return v.AttributeNames }).(pulumi.StringArrayOutput)
}

// Type of augmented manifest.
// One of `PLAIN_TEXT_DOCUMENT` or `SEMI_STRUCTURED_DOCUMENT`.
func (o EntityRecognizerInputDataConfigAugmentedManifestOutput) DocumentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigAugmentedManifest) *string { return v.DocumentType }).(pulumi.StringPtrOutput)
}

// Location of entity list.
func (o EntityRecognizerInputDataConfigAugmentedManifestOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigAugmentedManifest) string { return v.S3Uri }).(pulumi.StringOutput)
}

// Location of source PDF files.
func (o EntityRecognizerInputDataConfigAugmentedManifestOutput) SourceDocumentsS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigAugmentedManifest) *string { return v.SourceDocumentsS3Uri }).(pulumi.StringPtrOutput)
}

// Purpose of data in augmented manifest.
// One of `TRAIN` or `TEST`.
func (o EntityRecognizerInputDataConfigAugmentedManifestOutput) Split() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigAugmentedManifest) *string { return v.Split }).(pulumi.StringPtrOutput)
}

type EntityRecognizerInputDataConfigAugmentedManifestArrayOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigAugmentedManifestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityRecognizerInputDataConfigAugmentedManifest)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigAugmentedManifestArrayOutput) ToEntityRecognizerInputDataConfigAugmentedManifestArrayOutput() EntityRecognizerInputDataConfigAugmentedManifestArrayOutput {
	return o
}

func (o EntityRecognizerInputDataConfigAugmentedManifestArrayOutput) ToEntityRecognizerInputDataConfigAugmentedManifestArrayOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigAugmentedManifestArrayOutput {
	return o
}

func (o EntityRecognizerInputDataConfigAugmentedManifestArrayOutput) Index(i pulumi.IntInput) EntityRecognizerInputDataConfigAugmentedManifestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityRecognizerInputDataConfigAugmentedManifest {
		return vs[0].([]EntityRecognizerInputDataConfigAugmentedManifest)[vs[1].(int)]
	}).(EntityRecognizerInputDataConfigAugmentedManifestOutput)
}

type EntityRecognizerInputDataConfigDocuments struct {
	// Specifies how the input files should be processed.
	// One of `ONE_DOC_PER_LINE` or `ONE_DOC_PER_FILE`.
	InputFormat *string `pulumi:"inputFormat"`
	// Location of entity list.
	S3Uri     string  `pulumi:"s3Uri"`
	TestS3Uri *string `pulumi:"testS3Uri"`
}

// EntityRecognizerInputDataConfigDocumentsInput is an input type that accepts EntityRecognizerInputDataConfigDocumentsArgs and EntityRecognizerInputDataConfigDocumentsOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigDocumentsInput` via:
//
//          EntityRecognizerInputDataConfigDocumentsArgs{...}
type EntityRecognizerInputDataConfigDocumentsInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigDocumentsOutput() EntityRecognizerInputDataConfigDocumentsOutput
	ToEntityRecognizerInputDataConfigDocumentsOutputWithContext(context.Context) EntityRecognizerInputDataConfigDocumentsOutput
}

type EntityRecognizerInputDataConfigDocumentsArgs struct {
	// Specifies how the input files should be processed.
	// One of `ONE_DOC_PER_LINE` or `ONE_DOC_PER_FILE`.
	InputFormat pulumi.StringPtrInput `pulumi:"inputFormat"`
	// Location of entity list.
	S3Uri     pulumi.StringInput    `pulumi:"s3Uri"`
	TestS3Uri pulumi.StringPtrInput `pulumi:"testS3Uri"`
}

func (EntityRecognizerInputDataConfigDocumentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigDocuments)(nil)).Elem()
}

func (i EntityRecognizerInputDataConfigDocumentsArgs) ToEntityRecognizerInputDataConfigDocumentsOutput() EntityRecognizerInputDataConfigDocumentsOutput {
	return i.ToEntityRecognizerInputDataConfigDocumentsOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigDocumentsArgs) ToEntityRecognizerInputDataConfigDocumentsOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigDocumentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigDocumentsOutput)
}

func (i EntityRecognizerInputDataConfigDocumentsArgs) ToEntityRecognizerInputDataConfigDocumentsPtrOutput() EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return i.ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigDocumentsArgs) ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigDocumentsOutput).ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(ctx)
}

// EntityRecognizerInputDataConfigDocumentsPtrInput is an input type that accepts EntityRecognizerInputDataConfigDocumentsArgs, EntityRecognizerInputDataConfigDocumentsPtr and EntityRecognizerInputDataConfigDocumentsPtrOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigDocumentsPtrInput` via:
//
//          EntityRecognizerInputDataConfigDocumentsArgs{...}
//
//  or:
//
//          nil
type EntityRecognizerInputDataConfigDocumentsPtrInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigDocumentsPtrOutput() EntityRecognizerInputDataConfigDocumentsPtrOutput
	ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(context.Context) EntityRecognizerInputDataConfigDocumentsPtrOutput
}

type entityRecognizerInputDataConfigDocumentsPtrType EntityRecognizerInputDataConfigDocumentsArgs

func EntityRecognizerInputDataConfigDocumentsPtr(v *EntityRecognizerInputDataConfigDocumentsArgs) EntityRecognizerInputDataConfigDocumentsPtrInput {
	return (*entityRecognizerInputDataConfigDocumentsPtrType)(v)
}

func (*entityRecognizerInputDataConfigDocumentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerInputDataConfigDocuments)(nil)).Elem()
}

func (i *entityRecognizerInputDataConfigDocumentsPtrType) ToEntityRecognizerInputDataConfigDocumentsPtrOutput() EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return i.ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(context.Background())
}

func (i *entityRecognizerInputDataConfigDocumentsPtrType) ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigDocumentsPtrOutput)
}

type EntityRecognizerInputDataConfigDocumentsOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigDocumentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigDocuments)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigDocumentsOutput) ToEntityRecognizerInputDataConfigDocumentsOutput() EntityRecognizerInputDataConfigDocumentsOutput {
	return o
}

func (o EntityRecognizerInputDataConfigDocumentsOutput) ToEntityRecognizerInputDataConfigDocumentsOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigDocumentsOutput {
	return o
}

func (o EntityRecognizerInputDataConfigDocumentsOutput) ToEntityRecognizerInputDataConfigDocumentsPtrOutput() EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return o.ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(context.Background())
}

func (o EntityRecognizerInputDataConfigDocumentsOutput) ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityRecognizerInputDataConfigDocuments) *EntityRecognizerInputDataConfigDocuments {
		return &v
	}).(EntityRecognizerInputDataConfigDocumentsPtrOutput)
}

// Specifies how the input files should be processed.
// One of `ONE_DOC_PER_LINE` or `ONE_DOC_PER_FILE`.
func (o EntityRecognizerInputDataConfigDocumentsOutput) InputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigDocuments) *string { return v.InputFormat }).(pulumi.StringPtrOutput)
}

// Location of entity list.
func (o EntityRecognizerInputDataConfigDocumentsOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigDocuments) string { return v.S3Uri }).(pulumi.StringOutput)
}

func (o EntityRecognizerInputDataConfigDocumentsOutput) TestS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigDocuments) *string { return v.TestS3Uri }).(pulumi.StringPtrOutput)
}

type EntityRecognizerInputDataConfigDocumentsPtrOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigDocumentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerInputDataConfigDocuments)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigDocumentsPtrOutput) ToEntityRecognizerInputDataConfigDocumentsPtrOutput() EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return o
}

func (o EntityRecognizerInputDataConfigDocumentsPtrOutput) ToEntityRecognizerInputDataConfigDocumentsPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigDocumentsPtrOutput {
	return o
}

func (o EntityRecognizerInputDataConfigDocumentsPtrOutput) Elem() EntityRecognizerInputDataConfigDocumentsOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigDocuments) EntityRecognizerInputDataConfigDocuments {
		if v != nil {
			return *v
		}
		var ret EntityRecognizerInputDataConfigDocuments
		return ret
	}).(EntityRecognizerInputDataConfigDocumentsOutput)
}

// Specifies how the input files should be processed.
// One of `ONE_DOC_PER_LINE` or `ONE_DOC_PER_FILE`.
func (o EntityRecognizerInputDataConfigDocumentsPtrOutput) InputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigDocuments) *string {
		if v == nil {
			return nil
		}
		return v.InputFormat
	}).(pulumi.StringPtrOutput)
}

// Location of entity list.
func (o EntityRecognizerInputDataConfigDocumentsPtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigDocuments) *string {
		if v == nil {
			return nil
		}
		return &v.S3Uri
	}).(pulumi.StringPtrOutput)
}

func (o EntityRecognizerInputDataConfigDocumentsPtrOutput) TestS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigDocuments) *string {
		if v == nil {
			return nil
		}
		return v.TestS3Uri
	}).(pulumi.StringPtrOutput)
}

type EntityRecognizerInputDataConfigEntityList struct {
	// Location of entity list.
	S3Uri string `pulumi:"s3Uri"`
}

// EntityRecognizerInputDataConfigEntityListInput is an input type that accepts EntityRecognizerInputDataConfigEntityListArgs and EntityRecognizerInputDataConfigEntityListOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigEntityListInput` via:
//
//          EntityRecognizerInputDataConfigEntityListArgs{...}
type EntityRecognizerInputDataConfigEntityListInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigEntityListOutput() EntityRecognizerInputDataConfigEntityListOutput
	ToEntityRecognizerInputDataConfigEntityListOutputWithContext(context.Context) EntityRecognizerInputDataConfigEntityListOutput
}

type EntityRecognizerInputDataConfigEntityListArgs struct {
	// Location of entity list.
	S3Uri pulumi.StringInput `pulumi:"s3Uri"`
}

func (EntityRecognizerInputDataConfigEntityListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigEntityList)(nil)).Elem()
}

func (i EntityRecognizerInputDataConfigEntityListArgs) ToEntityRecognizerInputDataConfigEntityListOutput() EntityRecognizerInputDataConfigEntityListOutput {
	return i.ToEntityRecognizerInputDataConfigEntityListOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigEntityListArgs) ToEntityRecognizerInputDataConfigEntityListOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigEntityListOutput)
}

func (i EntityRecognizerInputDataConfigEntityListArgs) ToEntityRecognizerInputDataConfigEntityListPtrOutput() EntityRecognizerInputDataConfigEntityListPtrOutput {
	return i.ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigEntityListArgs) ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigEntityListOutput).ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(ctx)
}

// EntityRecognizerInputDataConfigEntityListPtrInput is an input type that accepts EntityRecognizerInputDataConfigEntityListArgs, EntityRecognizerInputDataConfigEntityListPtr and EntityRecognizerInputDataConfigEntityListPtrOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigEntityListPtrInput` via:
//
//          EntityRecognizerInputDataConfigEntityListArgs{...}
//
//  or:
//
//          nil
type EntityRecognizerInputDataConfigEntityListPtrInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigEntityListPtrOutput() EntityRecognizerInputDataConfigEntityListPtrOutput
	ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(context.Context) EntityRecognizerInputDataConfigEntityListPtrOutput
}

type entityRecognizerInputDataConfigEntityListPtrType EntityRecognizerInputDataConfigEntityListArgs

func EntityRecognizerInputDataConfigEntityListPtr(v *EntityRecognizerInputDataConfigEntityListArgs) EntityRecognizerInputDataConfigEntityListPtrInput {
	return (*entityRecognizerInputDataConfigEntityListPtrType)(v)
}

func (*entityRecognizerInputDataConfigEntityListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerInputDataConfigEntityList)(nil)).Elem()
}

func (i *entityRecognizerInputDataConfigEntityListPtrType) ToEntityRecognizerInputDataConfigEntityListPtrOutput() EntityRecognizerInputDataConfigEntityListPtrOutput {
	return i.ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(context.Background())
}

func (i *entityRecognizerInputDataConfigEntityListPtrType) ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigEntityListPtrOutput)
}

type EntityRecognizerInputDataConfigEntityListOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigEntityListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigEntityList)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigEntityListOutput) ToEntityRecognizerInputDataConfigEntityListOutput() EntityRecognizerInputDataConfigEntityListOutput {
	return o
}

func (o EntityRecognizerInputDataConfigEntityListOutput) ToEntityRecognizerInputDataConfigEntityListOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityListOutput {
	return o
}

func (o EntityRecognizerInputDataConfigEntityListOutput) ToEntityRecognizerInputDataConfigEntityListPtrOutput() EntityRecognizerInputDataConfigEntityListPtrOutput {
	return o.ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(context.Background())
}

func (o EntityRecognizerInputDataConfigEntityListOutput) ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityRecognizerInputDataConfigEntityList) *EntityRecognizerInputDataConfigEntityList {
		return &v
	}).(EntityRecognizerInputDataConfigEntityListPtrOutput)
}

// Location of entity list.
func (o EntityRecognizerInputDataConfigEntityListOutput) S3Uri() pulumi.StringOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigEntityList) string { return v.S3Uri }).(pulumi.StringOutput)
}

type EntityRecognizerInputDataConfigEntityListPtrOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigEntityListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerInputDataConfigEntityList)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigEntityListPtrOutput) ToEntityRecognizerInputDataConfigEntityListPtrOutput() EntityRecognizerInputDataConfigEntityListPtrOutput {
	return o
}

func (o EntityRecognizerInputDataConfigEntityListPtrOutput) ToEntityRecognizerInputDataConfigEntityListPtrOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityListPtrOutput {
	return o
}

func (o EntityRecognizerInputDataConfigEntityListPtrOutput) Elem() EntityRecognizerInputDataConfigEntityListOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigEntityList) EntityRecognizerInputDataConfigEntityList {
		if v != nil {
			return *v
		}
		var ret EntityRecognizerInputDataConfigEntityList
		return ret
	}).(EntityRecognizerInputDataConfigEntityListOutput)
}

// Location of entity list.
func (o EntityRecognizerInputDataConfigEntityListPtrOutput) S3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityRecognizerInputDataConfigEntityList) *string {
		if v == nil {
			return nil
		}
		return &v.S3Uri
	}).(pulumi.StringPtrOutput)
}

type EntityRecognizerInputDataConfigEntityType struct {
	// An entity type to be matched by the Entity Recognizer.
	// Cannot contain a newline (`\n`), carriage return (`\r`), or tab (`\t`).
	Type string `pulumi:"type"`
}

// EntityRecognizerInputDataConfigEntityTypeInput is an input type that accepts EntityRecognizerInputDataConfigEntityTypeArgs and EntityRecognizerInputDataConfigEntityTypeOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigEntityTypeInput` via:
//
//          EntityRecognizerInputDataConfigEntityTypeArgs{...}
type EntityRecognizerInputDataConfigEntityTypeInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigEntityTypeOutput() EntityRecognizerInputDataConfigEntityTypeOutput
	ToEntityRecognizerInputDataConfigEntityTypeOutputWithContext(context.Context) EntityRecognizerInputDataConfigEntityTypeOutput
}

type EntityRecognizerInputDataConfigEntityTypeArgs struct {
	// An entity type to be matched by the Entity Recognizer.
	// Cannot contain a newline (`\n`), carriage return (`\r`), or tab (`\t`).
	Type pulumi.StringInput `pulumi:"type"`
}

func (EntityRecognizerInputDataConfigEntityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigEntityType)(nil)).Elem()
}

func (i EntityRecognizerInputDataConfigEntityTypeArgs) ToEntityRecognizerInputDataConfigEntityTypeOutput() EntityRecognizerInputDataConfigEntityTypeOutput {
	return i.ToEntityRecognizerInputDataConfigEntityTypeOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigEntityTypeArgs) ToEntityRecognizerInputDataConfigEntityTypeOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigEntityTypeOutput)
}

// EntityRecognizerInputDataConfigEntityTypeArrayInput is an input type that accepts EntityRecognizerInputDataConfigEntityTypeArray and EntityRecognizerInputDataConfigEntityTypeArrayOutput values.
// You can construct a concrete instance of `EntityRecognizerInputDataConfigEntityTypeArrayInput` via:
//
//          EntityRecognizerInputDataConfigEntityTypeArray{ EntityRecognizerInputDataConfigEntityTypeArgs{...} }
type EntityRecognizerInputDataConfigEntityTypeArrayInput interface {
	pulumi.Input

	ToEntityRecognizerInputDataConfigEntityTypeArrayOutput() EntityRecognizerInputDataConfigEntityTypeArrayOutput
	ToEntityRecognizerInputDataConfigEntityTypeArrayOutputWithContext(context.Context) EntityRecognizerInputDataConfigEntityTypeArrayOutput
}

type EntityRecognizerInputDataConfigEntityTypeArray []EntityRecognizerInputDataConfigEntityTypeInput

func (EntityRecognizerInputDataConfigEntityTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityRecognizerInputDataConfigEntityType)(nil)).Elem()
}

func (i EntityRecognizerInputDataConfigEntityTypeArray) ToEntityRecognizerInputDataConfigEntityTypeArrayOutput() EntityRecognizerInputDataConfigEntityTypeArrayOutput {
	return i.ToEntityRecognizerInputDataConfigEntityTypeArrayOutputWithContext(context.Background())
}

func (i EntityRecognizerInputDataConfigEntityTypeArray) ToEntityRecognizerInputDataConfigEntityTypeArrayOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerInputDataConfigEntityTypeArrayOutput)
}

type EntityRecognizerInputDataConfigEntityTypeOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigEntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerInputDataConfigEntityType)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigEntityTypeOutput) ToEntityRecognizerInputDataConfigEntityTypeOutput() EntityRecognizerInputDataConfigEntityTypeOutput {
	return o
}

func (o EntityRecognizerInputDataConfigEntityTypeOutput) ToEntityRecognizerInputDataConfigEntityTypeOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityTypeOutput {
	return o
}

// An entity type to be matched by the Entity Recognizer.
// Cannot contain a newline (`\n`), carriage return (`\r`), or tab (`\t`).
func (o EntityRecognizerInputDataConfigEntityTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EntityRecognizerInputDataConfigEntityType) string { return v.Type }).(pulumi.StringOutput)
}

type EntityRecognizerInputDataConfigEntityTypeArrayOutput struct{ *pulumi.OutputState }

func (EntityRecognizerInputDataConfigEntityTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityRecognizerInputDataConfigEntityType)(nil)).Elem()
}

func (o EntityRecognizerInputDataConfigEntityTypeArrayOutput) ToEntityRecognizerInputDataConfigEntityTypeArrayOutput() EntityRecognizerInputDataConfigEntityTypeArrayOutput {
	return o
}

func (o EntityRecognizerInputDataConfigEntityTypeArrayOutput) ToEntityRecognizerInputDataConfigEntityTypeArrayOutputWithContext(ctx context.Context) EntityRecognizerInputDataConfigEntityTypeArrayOutput {
	return o
}

func (o EntityRecognizerInputDataConfigEntityTypeArrayOutput) Index(i pulumi.IntInput) EntityRecognizerInputDataConfigEntityTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityRecognizerInputDataConfigEntityType {
		return vs[0].([]EntityRecognizerInputDataConfigEntityType)[vs[1].(int)]
	}).(EntityRecognizerInputDataConfigEntityTypeOutput)
}

type EntityRecognizerVpcConfig struct {
	// List of security group IDs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of VPC subnets.
	Subnets []string `pulumi:"subnets"`
}

// EntityRecognizerVpcConfigInput is an input type that accepts EntityRecognizerVpcConfigArgs and EntityRecognizerVpcConfigOutput values.
// You can construct a concrete instance of `EntityRecognizerVpcConfigInput` via:
//
//          EntityRecognizerVpcConfigArgs{...}
type EntityRecognizerVpcConfigInput interface {
	pulumi.Input

	ToEntityRecognizerVpcConfigOutput() EntityRecognizerVpcConfigOutput
	ToEntityRecognizerVpcConfigOutputWithContext(context.Context) EntityRecognizerVpcConfigOutput
}

type EntityRecognizerVpcConfigArgs struct {
	// List of security group IDs.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// List of VPC subnets.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (EntityRecognizerVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerVpcConfig)(nil)).Elem()
}

func (i EntityRecognizerVpcConfigArgs) ToEntityRecognizerVpcConfigOutput() EntityRecognizerVpcConfigOutput {
	return i.ToEntityRecognizerVpcConfigOutputWithContext(context.Background())
}

func (i EntityRecognizerVpcConfigArgs) ToEntityRecognizerVpcConfigOutputWithContext(ctx context.Context) EntityRecognizerVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerVpcConfigOutput)
}

func (i EntityRecognizerVpcConfigArgs) ToEntityRecognizerVpcConfigPtrOutput() EntityRecognizerVpcConfigPtrOutput {
	return i.ToEntityRecognizerVpcConfigPtrOutputWithContext(context.Background())
}

func (i EntityRecognizerVpcConfigArgs) ToEntityRecognizerVpcConfigPtrOutputWithContext(ctx context.Context) EntityRecognizerVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerVpcConfigOutput).ToEntityRecognizerVpcConfigPtrOutputWithContext(ctx)
}

// EntityRecognizerVpcConfigPtrInput is an input type that accepts EntityRecognizerVpcConfigArgs, EntityRecognizerVpcConfigPtr and EntityRecognizerVpcConfigPtrOutput values.
// You can construct a concrete instance of `EntityRecognizerVpcConfigPtrInput` via:
//
//          EntityRecognizerVpcConfigArgs{...}
//
//  or:
//
//          nil
type EntityRecognizerVpcConfigPtrInput interface {
	pulumi.Input

	ToEntityRecognizerVpcConfigPtrOutput() EntityRecognizerVpcConfigPtrOutput
	ToEntityRecognizerVpcConfigPtrOutputWithContext(context.Context) EntityRecognizerVpcConfigPtrOutput
}

type entityRecognizerVpcConfigPtrType EntityRecognizerVpcConfigArgs

func EntityRecognizerVpcConfigPtr(v *EntityRecognizerVpcConfigArgs) EntityRecognizerVpcConfigPtrInput {
	return (*entityRecognizerVpcConfigPtrType)(v)
}

func (*entityRecognizerVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerVpcConfig)(nil)).Elem()
}

func (i *entityRecognizerVpcConfigPtrType) ToEntityRecognizerVpcConfigPtrOutput() EntityRecognizerVpcConfigPtrOutput {
	return i.ToEntityRecognizerVpcConfigPtrOutputWithContext(context.Background())
}

func (i *entityRecognizerVpcConfigPtrType) ToEntityRecognizerVpcConfigPtrOutputWithContext(ctx context.Context) EntityRecognizerVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRecognizerVpcConfigPtrOutput)
}

type EntityRecognizerVpcConfigOutput struct{ *pulumi.OutputState }

func (EntityRecognizerVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRecognizerVpcConfig)(nil)).Elem()
}

func (o EntityRecognizerVpcConfigOutput) ToEntityRecognizerVpcConfigOutput() EntityRecognizerVpcConfigOutput {
	return o
}

func (o EntityRecognizerVpcConfigOutput) ToEntityRecognizerVpcConfigOutputWithContext(ctx context.Context) EntityRecognizerVpcConfigOutput {
	return o
}

func (o EntityRecognizerVpcConfigOutput) ToEntityRecognizerVpcConfigPtrOutput() EntityRecognizerVpcConfigPtrOutput {
	return o.ToEntityRecognizerVpcConfigPtrOutputWithContext(context.Background())
}

func (o EntityRecognizerVpcConfigOutput) ToEntityRecognizerVpcConfigPtrOutputWithContext(ctx context.Context) EntityRecognizerVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityRecognizerVpcConfig) *EntityRecognizerVpcConfig {
		return &v
	}).(EntityRecognizerVpcConfigPtrOutput)
}

// List of security group IDs.
func (o EntityRecognizerVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntityRecognizerVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of VPC subnets.
func (o EntityRecognizerVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntityRecognizerVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type EntityRecognizerVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (EntityRecognizerVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRecognizerVpcConfig)(nil)).Elem()
}

func (o EntityRecognizerVpcConfigPtrOutput) ToEntityRecognizerVpcConfigPtrOutput() EntityRecognizerVpcConfigPtrOutput {
	return o
}

func (o EntityRecognizerVpcConfigPtrOutput) ToEntityRecognizerVpcConfigPtrOutputWithContext(ctx context.Context) EntityRecognizerVpcConfigPtrOutput {
	return o
}

func (o EntityRecognizerVpcConfigPtrOutput) Elem() EntityRecognizerVpcConfigOutput {
	return o.ApplyT(func(v *EntityRecognizerVpcConfig) EntityRecognizerVpcConfig {
		if v != nil {
			return *v
		}
		var ret EntityRecognizerVpcConfig
		return ret
	}).(EntityRecognizerVpcConfigOutput)
}

// List of security group IDs.
func (o EntityRecognizerVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EntityRecognizerVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// List of VPC subnets.
func (o EntityRecognizerVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EntityRecognizerVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigInput)(nil)).Elem(), EntityRecognizerInputDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigPtrInput)(nil)).Elem(), EntityRecognizerInputDataConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigAnnotationsInput)(nil)).Elem(), EntityRecognizerInputDataConfigAnnotationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigAnnotationsPtrInput)(nil)).Elem(), EntityRecognizerInputDataConfigAnnotationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigAugmentedManifestInput)(nil)).Elem(), EntityRecognizerInputDataConfigAugmentedManifestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigAugmentedManifestArrayInput)(nil)).Elem(), EntityRecognizerInputDataConfigAugmentedManifestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigDocumentsInput)(nil)).Elem(), EntityRecognizerInputDataConfigDocumentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigDocumentsPtrInput)(nil)).Elem(), EntityRecognizerInputDataConfigDocumentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigEntityListInput)(nil)).Elem(), EntityRecognizerInputDataConfigEntityListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigEntityListPtrInput)(nil)).Elem(), EntityRecognizerInputDataConfigEntityListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigEntityTypeInput)(nil)).Elem(), EntityRecognizerInputDataConfigEntityTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerInputDataConfigEntityTypeArrayInput)(nil)).Elem(), EntityRecognizerInputDataConfigEntityTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerVpcConfigInput)(nil)).Elem(), EntityRecognizerVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRecognizerVpcConfigPtrInput)(nil)).Elem(), EntityRecognizerVpcConfigArgs{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigPtrOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigAnnotationsOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigAnnotationsPtrOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigAugmentedManifestOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigAugmentedManifestArrayOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigDocumentsOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigDocumentsPtrOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigEntityListOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigEntityListPtrOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigEntityTypeOutput{})
	pulumi.RegisterOutputType(EntityRecognizerInputDataConfigEntityTypeArrayOutput{})
	pulumi.RegisterOutputType(EntityRecognizerVpcConfigOutput{})
	pulumi.RegisterOutputType(EntityRecognizerVpcConfigPtrOutput{})
}
